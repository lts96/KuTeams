학생 model 에 필요한 값들 
1. id , pw  (string)
2. 이름     (string)
3. 수강한 강의 list (string[])
4. 직업 = 학생 (string)

교사 model 에 필요한 값들     
1. id. pw 	  (string)
2. 이름 	  (string)
3. 개설한 강의 list (string[])
4. 직업 = 교사 (string)

회원 가입 , 로그인 기능은 추가기능 쪽으로 분류 

핵심 기능은 멀티태스킹 구현과 실시간 전송이 제대로 되는가 
다중 클라이언트 접속이 가능한가? , 성능 개선을 위해 어떤 노력을 했는가

기본 시나리오 (1 강의실 = 1 교사 , 3 학생)
교사 시점 

1. 기본 base server 가 존재 

2. 클라이언트의 접속 요청이 들어오면 일단 연결 수락 (멀티 쓰레드 사용)
	2-1. 로그인 진행 후 로그인 실패 시 연결 끊어버리고 종료 
	2-2. 로그인 성공 시 연결 유지 

3. 교사 객체로 들어왔을 경우 강의실 생성 버튼 활성화 

	3-1. 강의실 생성시 강의실 ui 가 출력됨 (화면 , 채팅창 , 강의 시작 버튼 , 강의 종료 버튼)
	3-2. 강의실에 학생이 들어왔을 경우 학생 이름이 서버를 거쳐서 교사 ui 쪽으로 전송되어 출력.  교사쪽 ui에서 강의 시작 버튼이 활성화됨. 

4. 강의 시작 시 채팅 프로세스와 화면 전송 프로세스 시작 (방 안의 클라이언트 정보를 가지고 기존에 연결된 쓰레드는 채팅으로 넘어가고 별도로 화면전송용 쓰레드 생성)

	4-1 즉 하나의 클라이언트당 기본 쓰레드 + 채팅 쓰레드 추가 -> 2개씩 관리. 
	4-2 학생이 강의 종료 버튼 누르면 해당 학생의 화면전송 쓰레드 제거.   학생의 강의 시간 업데이트 , 기본 쓰레드는 메인함수로 돌아간다.
	4-3 교사가 강의 종료 누르면 자동적으로 학생들의 화면전송 쓰레드 종료 , 학생들의 화면 전송하던 쓰레드도 메인함수로 리턴 
	4-4 교사의 메인 쓰레드 또한 메인 함수로 넘어간다. 

클라이언트 주의 사항 
서버에서 2개의 쓰레드를 통해서 정보전달 (화면 정보 , 채팅 정보)
두개가 별도로 돌아가기 때문에 클라이언트 프로세스에서도 2개의 쓰레드 돌려서 
정보들을 받아서 처리해야됨. 

즉 처음 기본 쓰레드는 메인에서 놀다가 방에 들어가서 강의가 시작되면 채팅 돌리고 
서버로부터 시그널 받아서 새로운 쓰레드 생성 후 화면 정보 recv 해줘야됨  

서버 주의 사항 
여러 클라이언트에게 정보 보내는건 오버헤드가 크니까 줄일 방법이 필요 
broadcast  또는 멀티 캐스트 사용할 것  
(broadcast는 지역 lan 만 가능하긴한데 이건 시연 상황을 봐야될듯)
강의 시작하면 각 클라이언트에게 시작 시그널 보내기 
-> 그러면 클라리언트는 이 시그널을 받고 새로운 쓰레드 생성해서 화면 수신용으로 사용 







